# contains tests for matrix_divided

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

# divider is int
>>> matrix_divided([], 1)
[]

# divider is float
>>> matrix_divided([], 1.0)
[]

# divider is zero
>>> matrix_divided([], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

# divider is not a number
>>> matrix_divided([], "")
Traceback (most recent call last):
...
TypeError: div must be a number

# empty list
>>> matrix_divided([], 1)
[]

# one list
>>> l = [[2,2.2,0]]
>>> matrix_divided(l, 1)
[[2.0, 2.2, 0.0]]

# two or more lists
>>> l = [[2,2.2,0], [3.2, 4, -3]]
>>> matrix_divided(l, 1)
[[2.0, 2.2, 0.0], [3.2, 4.0, -3.0]]

# list containing non number
>>> l = [[0j]]
>>> matrix_divided(l, 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# different row sizes
>>> l = [[2, 0], [3.2]]
>>> matrix_divided(l, 1)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# not list of lists
>>> matrix_divided({}, 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# floating point precision handling
>>> matrix_divided([[2.23333]], 1)
[[2.23]]
